{"version":3,"sources":["Component/Navigation/Navigation.js","Component/SignIn/SignIn.js","Component/Register/Register.js","Component/Logo/Logo.js","Component/ImageLink/ImageLink.js","Component/BoundingBox/BoundingBox.js","Component/FaceDetection/FaceDetection.js","Component/Rank/Rank.js","App.js","serviceWorker.js","index.js","Component/Logo/Icon.png"],"names":["Navigation","onRouteChange","isSignIn","style","display","justifyContent","onClick","className","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","this","htmlFor","type","name","onChange","React","Component","Register","onNameChange","onSubmitRegister","Logo","options","max","height","width","src","Icon","alt","ImageLink","onInputChange","onButtonClick","BoundingBox","box","top","topRow","bottom","bottomRow","left","leftCol","right","rightCol","LinkImage","showImage","blueBox","map","i","key","Rank","entries","ParticlesOption","particles","number","density","enable","value_area","color","shape","size","move","speed","retina_detect","initialState","input","imageLink","route","joined","App","data","calculateFaceLocation","image","document","getElementById","Number","outputs","regions","element","faceLocation","region_info","bounding_box","left_col","top_row","right_col","bottom_row","displayBox","onPicSubmit","res","count","Object","assign","catch","err","console","log","params","FaceDetection","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.6fd6d465.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navigation = ({ onRouteChange, isSignIn }) => {\r\n  if (isSignIn) {\r\n    return (\r\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <p\r\n          onClick={() => onRouteChange(\"signin\")}\r\n          className=\"pa4 black underline f3 dim link\"\r\n        >\r\n          Sign Out\r\n        </p>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return (\r\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <p\r\n          onClick={() => onRouteChange(\"signin\")}\r\n          className=\"pa4 black underline f3 dim link\"\r\n        >\r\n          Sign In\r\n        </p>\r\n        <p\r\n          onClick={() => onRouteChange(\"register\")}\r\n          className=\"pa4 black underline f3 dim link\"\r\n        >\r\n          Register\r\n        </p>\r\n      </nav>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\",\r\n    };\r\n  }\r\n  onEmailChange = (event) => {\r\n    this.setState({ signInEmail: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({ signInPassword: event.target.value });\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch(\"https://salty-woodland-60425.herokuapp.com/signin\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((user) => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"home\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <div>\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-2 center\">\r\n          <main className=\"pa4 black-80\">\r\n            <div className=\"measure\">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                    type=\"email\"\r\n                    name=\"email-address\"\r\n                    id=\"email-address\"\r\n                    onChange={this.onEmailChange}\r\n                  />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    onChange={this.onPasswordChange}\r\n                  />\r\n                </div>\r\n              </fieldset>\r\n              <div className=\"\">\r\n                <input\r\n                  onClick={this.onSubmitSignIn}\r\n                  className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                  type=\"submit\"\r\n                  value=\"Sign in\"\r\n                />\r\n              </div>\r\n              <div className=\"lh-copy mt3\">\r\n                <p\r\n                  onClick={() => onRouteChange(\"rigister\")}\r\n                  className=\"f6 link dim black db\"\r\n                >\r\n                  Register\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  onNameChange = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  onSubmitRegister = () => {\r\n    fetch(\"https://salty-woodland-60425.herokuapp.com/register\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((user) => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"home\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-2 center\">\r\n          <main className=\"pa4 black-80\">\r\n            <div className=\"measure\">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\r\n                    Name\r\n                  </label>\r\n                  <input\r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    onChange={this.onNameChange}\r\n                  />\r\n                </div>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                    type=\"email\"\r\n                    name=\"email-address\"\r\n                    id=\"email-address\"\r\n                    onChange={this.onEmailChange}\r\n                  />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    onChange={this.onPasswordChange}\r\n                  />\r\n                </div>\r\n              </fieldset>\r\n              <div className=\"\">\r\n                <input\r\n                  onClick={this.onSubmitRegister}\r\n                  className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                  type=\"submit\"\r\n                  value=\"Register\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport Icon from \"./Icon.png\";\r\nimport \"./Logo.css\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"ph4 ma\">\r\n      <Tilt\r\n        className=\"Tilt shadow-2 ma10 br4\"\r\n        options={{ max: 40 }}\r\n        style={{ height: 150, width: 150 }}\r\n      >\r\n        <div className=\"Tilt-inner pa3\">\r\n          <img src={Icon} alt=\"logo\" />\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./ImageLink.css\";\r\n\r\nconst ImageLink = ({ onInputChange, onButtonClick }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"f3\">\r\n        {`This Magic Mind will detect faces in your pictures. Give it a try...`}\r\n      </p>\r\n      <div className=\"center\">\r\n        <div className=\"center form pa4 br3 shadow-5\">\r\n          <input\r\n            className=\"bw0 f4 pa2 w-70 center\"\r\n            type=\"text\"\r\n            onChange={onInputChange}\r\n          />\r\n          <button\r\n            className=\"bw0 w-30 grow f4 link ph3 pv2 dib white bg-light-purple\"\r\n            onClick={onButtonClick}\r\n          >\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLink;\r\n","import React from \"react\";\r\nimport \"./BoundingBox.css\";\r\n\r\nconst BoundingBox = ({ box }) => {\r\n  return (\r\n    <div\r\n      className=\"bounding-box\"\r\n      style={{\r\n        top: box.topRow,\r\n        bottom: box.bottomRow,\r\n        left: box.leftCol,\r\n        right: box.rightCol,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default BoundingBox;\r\n","import React from \"react\";\r\nimport BoundingBox from \"../BoundingBox/BoundingBox\";\r\n\r\nconst LinkImage = ({ showImage, blueBox }) => {\r\n  return (\r\n    <div className=\"center ma\">\r\n      <div className=\"absolute mt2\">\r\n        <img\r\n          id=\"inputimage\"\r\n          alt=\"\"\r\n          src={showImage}\r\n          width=\"500px\"\r\n          height=\"auto\"\r\n        />\r\n        {blueBox.map((box, i) => (\r\n          <BoundingBox box={box} key={i} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinkImage;\r\n","import React from \"react\";\r\n\r\nconst Rank = ({ name, entries }) => {\r\n  return (\r\n    <div className=\"f3 white\">\r\n      {`${name} Your Current Entries are...`}\r\n      <div className=\"f1\">{`${entries}`}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./Component/Navigation/Navigation\";\nimport SignIn from \"./Component/SignIn/SignIn\";\nimport Register from \"./Component/Register/Register\";\nimport Logo from \"./Component/Logo/Logo\";\nimport ImageLink from \"./Component/ImageLink/ImageLink\";\nimport FaceDetection from \"./Component/FaceDetection/FaceDetection\";\nimport Rank from \"./Component/Rank/Rank\";\nimport Particles from \"react-particles-js\";\n\nconst ParticlesOption = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 1000,\n      },\n    },\n    color: { value: \"#ffffff\" },\n    shape: { type: \"circle\" },\n    size: { value: 3 },\n    move: {\n      enable: true,\n      speed: 2,\n    },\n    retina_detect: {\n      enable: true,\n    },\n  },\n};\n\nconst initialState = {\n  input: \"\",\n  imageLink: \"\",\n  box: [],\n  route: \"signin\",\n  isSignIn: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\",\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined,\n      },\n    });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  calculateFaceLocation = (data) => {\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    const allFaceLocation = data.outputs[0].data.regions;\n    const boundingBoxes = allFaceLocation.map((element) => {\n      const faceLocation = element.region_info.bounding_box;\n      return {\n        leftCol: faceLocation.left_col * width,\n        topRow: faceLocation.top_row * height,\n        rightCol: width - faceLocation.right_col * width,\n        bottomRow: height - faceLocation.bottom_row * height,\n      };\n    });\n    return boundingBoxes;\n  };\n\n  displayBox = (box) => {\n    this.setState({ box: box });\n  };\n\n  onPicSubmit = () => {\n    this.setState({ imageLink: this.state.input });\n    fetch(\"https://salty-woodland-60425.herokuapp.com/imageurl\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        input: this.state.input,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response) {\n          fetch(\"https://salty-woodland-60425.herokuapp.com/image\", {\n            method: \"put\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              id: this.state.user.id,\n            }),\n          })\n            .then((res) => res.json())\n            .then((count) => {\n              this.setState(Object.assign(this.state.user, { entries: count }));\n            });\n        }\n        this.displayBox(this.calculateFaceLocation(response));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"signout\") {\n      this.setState(initialState);\n    } else if (route === \"home\") {\n      this.setState({ isSignIn: true });\n    } else if (route === \"signin\") {\n      this.setState(initialState);\n    }\n    this.setState({ route: route });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={ParticlesOption} />\n        <Navigation\n          isSignIn={this.state.isSignIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {this.state.route === \"home\" ? (\n          <div>\n            <Logo />\n            <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <ImageLink\n              onInputChange={this.onInputChange}\n              onButtonClick={this.onPicSubmit}\n            />\n            <FaceDetection\n              blueBox={this.state.box}\n              showImage={this.state.imageLink}\n            />\n          </div>\n        ) : this.state.route === \"signin\" ? (\n          <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        ) : (\n          <Register\n            loadUser={this.loadUser}\n            onRouteChange={this.onRouteChange}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Icon.4100098c.png\";"],"sourceRoot":""}